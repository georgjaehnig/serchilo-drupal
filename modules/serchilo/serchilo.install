<?PHP

/**
 * Implements hook_install().
 */
function serchilo_install(){

  module_load_include('module', 'taxonomy', 'taxonomy');

  $vocabularies = taxonomy_vocabulary_get_names();
  _serchilo_create_namespaces_from_file($vocabularies['namespaces']);
  _serchilo_create_user_namespaces($vocabularies['namespaces'], $vocabularies['namespace_types']);
  _serchilo_set_default_user_settings();
  _serchilo_create_shortcuts_from_file();

  //serchilo_add_defaults_to_admin();

}

/**
 * Implements hook_uninstall().
 */
function serchilo_uninstall(){
  #$vocabularies = taxonomy_vocabulary_get_names();
  #taxonomy_vocabulary_delete($vocabularies['namespaces']->vid);
  #taxonomy_vocabulary_delete($vocabularies['namespace_types']->vid);
}

/**
 * Implements hook_install().
 */
function serchilo_schema() {

  $schema['serchilo_shortcut'] = array(
    'description' => 'Mirrored nodes of type shortcut for faster access.',
    'fields' => array(
      'nid' => array(
        'description' => 'The node id.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The node title.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'keyword' => array(
        'description' => 'The keyword.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'argument_names' => array(
        'description' => 'The argument names, as string, seperated by comma.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'argument_count' => array(
        'description' => 'The number of arguments.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'url' => array(
        'description' => 'The target URL of the command, placeholders marked with {s:foo}, according to http://www.opensearch.org/Specifications/OpenSearch/1.1#OpenSearch_URL_template_syntax',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'weight' => array(
        'description' => 'The weight. Used for ordering in autocomplete.',
        'type' => 'float',
        'not null' => FALSE,
      ),
      'invisible' => array(
        'description' => 'If true, command will not be shown in listings. Usefull for deleted commands still being accessible for backwards compatibility.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 0,
      ),
      'set_referrer' => array(
        'description' => 'If true, will redirect the command via HTML refresh, to set a referrer.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 0,
      ),
      'namespace_id' => array(
        'description' => 'The namespace id.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'namespace_name' => array(
        'description' => 'The namespace name, corresponding to the namespace id.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'input_encoding' => array(
        'description' => 'The input encoding of the URL arguments.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('nid'),
  );

  return $schema;
}


function _serchilo_create_namespaces_from_file($vocabulary_namespaces) {

  $tsvs = serchilo_read_tsv_file(drupal_get_path('module', 'serchilo') . '/tsv/namespaces.tsv', $filename);
   
  foreach ($tsvs as $tsv) {

    $namespace         = new StdClass;
    $namespace->vid    = (int) $vocabulary_namespaces->vid;
    $namespace->format = 'plain_text';

    foreach (array_keys($tsv) as $column_name) {
      switch ($column_name) {
      case 'type':
        $namespace_type = serchilo_taxonomy_ensure_term($tsv[$column_name], 'namespace_types');
        $namespace->field_namespace_type[LANGUAGE_NONE][0]['tid'] = $namespace_type->tid;
        break;
      case 'name':
      case 'description':
        $namespace->{$column_name} = $tsv[$column_name];
        break;
      }
    }
    taxonomy_term_save($namespace);
  }
}

function _serchilo_create_user_namespaces($vocabulary_namespaces, $vocabulary_namespace_types) {

  $namespace_type = serchilo_taxonomy_ensure_term('user', 'namespace_types');

  # creating user NS

  $users = entity_load('user');
  foreach($users as $user) {
    # omit anonymous user
    if ($user->uid == 0) {
      continue; 
    }
    
    if (!taxonomy_get_term_by_name($user->name, 'namespaces')) {
      $namespace              = new StdClass;
      $namespace->name        = $user->name;
      $namespace->description = $namespace_description;
      $namespace->vid         = (int) $vocabulary_namespaces->vid;
      $namespace->field_namespace_type[LANGUAGE_NONE][0]['tid'] = $namespace_type->tid;
      taxonomy_term_save($namespace);
    }
  }
}

function _serchilo_set_default_user_settings() {

  $default_language_namespace = array_shift(taxonomy_get_term_by_name(DEFAULT_LANGUAGE, 'namespaces') ?: array());
  $default_country_namespace  = array_shift(taxonomy_get_term_by_name(DEFAULT_COUNTRY, 'namespaces') ?: array());

  $accounts = entity_load('user');

  foreach($accounts as $account) {
    # omit anonymous user
    if ($account->uid == 0) {
      continue; 
    }

    $account->field_language_namespace[LANGUAGE_NONE][0]['tid'] = $default_language_namespace->tid;
    $account->field_country_namespace[LANGUAGE_NONE][0]['tid'] = $default_country_namespace->tid;
    user_save($account);
  }
}

function _serchilo_create_shortcuts_from_file() {

  $shortcuts = serchilo_read_tsv_file(drupal_get_path('module', 'serchilo') . '/tsv/shortcuts.tsv');

  foreach ($shortcuts as $shortcut) {

    $node = new StdClass;
    $node->type = 'shortcut';
    // created by admin
    $node->uid = 1;
    $node->revision_moderation = FALSE;

    foreach (array_keys($shortcut) as $column_name) {
      switch ($column_name) {
      case 'title':
        $node->{$column_name} = $shortcut[$column_name];
        break;
      case 'namespace_name':
        $namespace = serchilo_taxonomy_ensure_term($shortcut[$column_name], 'namespaces');
        $node->{'field_namespace'}[LANGUAGE_NONE][0] = (array) $namespace;
        break;

      default:
        $node->{'field_' . $column_name}[LANGUAGE_NONE][0]['value'] = $shortcut[$column_name];
        break;
      }
    }
    node_save($node);
  }
}


function serchilo_read_tsv_file($filename) {

  // read all lines
  $lines = file($filename);

  // first line is the header,
  // specifying column names
  $header = array_shift($lines);

  // remove linebreak
  $header = substr($header, 0, -1);

  // get column names
  $column_names = explode("\t", $header);

  $data = array();
  foreach ($lines as $line) {
    $line = substr($line, 0, -1);
    $field_values = explode("\t", $line);
    for ($i=0; $i<count($column_names); $i++) {
      $field_values_keyed[$column_names[$i]] = $field_values[$i];
    } 
    $data[] = $field_values_keyed;
  }
  return $data;
}
